;//move macro
;//compare instruction 
cmp_inst_P1 MACRO MESS,CHAR2,A_SIZE1

LOCAL CHECK_FORB1,EH,EH2
;//FORB CHAR
;LEA DI,MESS
;LEA SI,CHAR2
;MOV DL,[SI]
;LEA AX,A_SIZE1
;MOV CX,AX
;CHECK_FORB1:
;MOV AL,[DI]
;CMP AL,DL
;JZ NOT_COMMAND
;INC DI
;LOOP CHECK_FORB1


LEA SI,MESS
MOV BH,0
MOV BL,[SI] 
MOV AX,0        
ADD AX,BX        ;;MOVE MESS TO AX
INC SI
MOV BH,0
MOV BL,[SI] 
ADD AX,BX
INC SI
MOV BH,0
MOV BL,[SI] 
ADD AX,BX    ;;GET SUM OF ASCII CODES OF 1ST 3 CHAR 

;;COMPARE 
MOV BP,20
;//1.MOVE
CMP AX,338D
MOV BP,1
JZ OPERATIONS1
;//2.ADD
CMP AX,297D
MOV BP,2
JZ OPERATIONS1
;//3.SUB
CMP AX,330D
MOV BP,3
JZ OPERATIONS1
;//4.AND
CMP AX,307D
MOV BP,6
JZ OPERATIONS1
;//5.ROR
CMP AX,339D
MOV BP,11
JZ OPERATIONS2
//6.7.8.NOOP & SHR &ROL
CMP AX,333D
JZ EH

;//9.CLC
CMP AX,306D
JZ CLCF
;//10.XOR
CMP AX,345D
MOV BP,0
JZ OPERATIONS1
;//11.ADC
CMP AX,296D
MOV BP,5
JZ OPERATIONS1
;//12.SBB
CMP AX,311D
MOV BP,4
JZ OPERATIONS1
;//13.SHL & 16.RCR
CMP AX,327D
JZ EH2

;//14.SAR
CMP AX,326D
MOV BP,10
JZ OPERATIONS2

;//15.RCL
CMP AX,321
MOV BP,13
JZ OPERATIONS2

JMP NOT_COMMAND

 
;//SHR,NOOP,ROL 
EH:
 LEA SI,MESS
 MOV DL,[SI]
 CMP DL,'n'
 JZ NOOP
 CMP DL,'s'
 MOV BP,9
 JZ OPERATIONS2
 CMP DL,'r'
 MOV BP,12
 JZ OPERATIONS2
 JMP NOT_COMMAND

;//SHL,RCR
EH2:
 LEA SI,MESS
 MOV DL,[SI]
 CMP DL,'s'
 MOV BP,8
 JMP OPERATIONS2

  CMP DL,'r'
  MOV BP,20
  JMP OPERATIONS2

  JMP NOT_COMMAND
ENDM cmp_inst